service: asana-gitlab-bridge
plugins:
  - serverless-dotenv-plugin

custom:
  
  # Vars to share from global .env
  dotenv:
    path: ../.env
    include:
      - CONTENTFUl_ACCESS_TOKEN
      - CONTENTFUL_SPACE_ID
      - ASANA_ACCESS_TOKEN
      - GITLAB_ACCESS_TOKEN
  
  # Get the stage and region
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  
  # Make the gateway URL
  # http://www.goingserverless.com/blog/api-gateway-url
  gatewayUrl:
    Fn::Join:
      - ""
      - - "https://"
        - Ref: "ApiGatewayRestApi"
        - ".execute-api.${self:custom.region}.amazonaws.com/${self:custom.stage}"

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  logRetentionInDays: 30
  
  # Derived variables
  environment:
    DB: asana-gitlab-bridge-${opt:stage, self:provider.stage}
    GATEWAY_URL: ${env:GATEWAY_URL, self:provider.gatewayUrl}
  
  # Database rules
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: 
        - arn:aws:dynamodb:*:*:table/${self:provider.environment.DB}
        - arn:aws:dynamodb:*:*:table/${self:provider.environment.DB}/*
  
functions:
  
  listAsanaProjects:
    handler: handler.listAsanaProjects
    description: Return list of Asana projects
    events:
      - http:
          path: asana/projects
          method: get 
          cors: true

  listGitlabProjects:
    handler: handler.listGitlabProjects
    description: Return list of GitLab projects
    events:
      - http:
          path: gitlab/projects
          method: get 
          cors: true
  
  onAsanaWebhook:
    handler: handler.onAsanaWebhook
    description: Handle Asana webhook
    events:
      - http:
          path: asana/webhook
          method: post 
  
  onContentfulWebhook:
    handler: handler.onContentfulWebhook
    description: Handle Contentful webhook
    events:
      - http:
          path: contentful/webhook
          method: post 

resources:
  Resources:
    
    # Make the key-val store DB
    DB:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DB}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    